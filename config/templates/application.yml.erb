defaults: &defaults

  # Host settings
  URL_HOST: <%= @vars['peatio']['host'] %>
  URL_SCHEME: https

  # Configuration variables for JWT verification.
  # Get explanation at https://en.wikipedia.org/wiki/JSON_Web_Token.
  #
  # JWT_PUBLIC_KEY
  #
  # JWT provider uses private key for encoding JSON Web Tokens
  # while public key is used for decoding by resources.
  #
  # For example, Barong is JWT provider, Applogic is resource accepting JWT.
  # Barong must have private key installed, Applogic must have public key installed.
  #
  # You can generate keypair by running:
  #
  #   ruby -e "require 'openssl'; require 'base64'; OpenSSL::PKey::RSA.generate(2048).tap { |p| puts '', 'PRIVATE RSA KEY (URL-safe Base64 encoded, PEM):', '', Base64.urlsafe_encode64(p.to_pem), '', 'PUBLIC RSA KEY (URL-safe Base64 encoded, PEM):', '', Base64.urlsafe_encode64(p.public_key.to_pem) }"
  #
  # Copy the generated private key and put it's value to appropriate variable at JWT provider (for example, at Barong it will be JWT_SHARED_SECRET_KEY).
  # Copy the generated public key and put it's value to variable JWT_PUBLIC_KEY (at Applogic).
  #
  # Applogic and JWT provider should have the same keypair installed, or they would not understand each other.
  #
  # You may want to adjust key length or cipher.
  #
  # Development and test environments already don't include sample keys.
  #
  # You can generate valid JWT by running:
  #
  #   JWT.encode(payload, OpenSSL::PKey.read(Base64.urlsafe_decode64(ENCODED_PRIVATE_KEY)), ENV.fetch('JWT_ALGORITHM'))
  #
  # Replace ENCODED_PRIVATE_KEY with private key printed by previous command.
  #
  # You can decode JWT by running:
  #
  #   JWT.decode(token, OpenSSL::PKey.read(Base64.urlsafe_decode64(ENCODED_PUBLIC_KEY)), true, algorithms: [ENV.fetch('JWT_ALGORITHM')])
  #
  # To authenticate using JWT send it's value in "Authorization" header:
  #
  #   curl -H "Authorization: Bearer TOKEN" http://localhost:3000/api/endpoint
  #
  JWT_PUBLIC_KEY:        ~
  JWT_ALGORITHM:         RS256 # JWT signing algorithm (mandatory).
  JWT_ISSUER:            ~     # JWT issuer name (optional).
  JWT_AUDIENCE:          barong  # Optional.
  JWT_DEFAULT_LEEWAY:    ~     # Seconds (optional).
  JWT_ISSUED_AT_LEEWAY:  '180' # Seconds (optional).
  JWT_EXPIRATION_LEEWAY: ~     # Seconds (optional).
  JWT_NOT_BEFORE_LEEWAY: ~     # Seconds (optional).

  # Event API RabbitMQ setting.
  EVENT_API_RABBITMQ_URL:      ~ # Set only this variable or use the variables below to set each setting separately.
  EVENT_API_RABBITMQ_HOST:     localhost
  EVENT_API_RABBITMQ_PORT:     '5672'
  EVENT_API_RABBITMQ_USERNAME: guest
  EVENT_API_RABBITMQ_PASSWORD: guest

  # Peatio Event API JWT key setting.
  PEATIO_EVENT_API_JWT_PUBLIC_KEY:        ~     # Mandatory.
  PEATIO_EVENT_API_JWT_ALGORITHM:         RS256 # JWT signing algorithm (mandatory).
  PEATIO_EVENT_API_JWT_ISSUER:            ~     # JWT issuer name (optional).
  PEATIO_EVENT_API_JWT_AUDIENCE:          ~     # Optional.
  PEATIO_EVENT_API_JWT_SUBJECT:           ~     # Optional.
  PEATIO_EVENT_API_JWT_DEFAULT_LEEWAY:    ~     # Seconds (optional).
  PEATIO_EVENT_API_JWT_ISSUED_AT_LEEWAY:  ~     # Seconds (optional).
  PEATIO_EVENT_API_JWT_EXPIRATION_LEEWAY: ~     # Seconds (optional).
  PEATIO_EVENT_API_JWT_NOT_BEFORE_LEEWAY: ~     # Seconds (optional).

  # Barong Event API JWT key setting.
  BARONG_EVENT_API_JWT_PUBLIC_KEY:        ~     # Mandatory.
  BARONG_EVENT_API_JWT_ALGORITHM:         RS256 # JWT signing algorithm (mandatory).
  BARONG_EVENT_API_JWT_ISSUER:            ~     # JWT issuer name (optional).
  BARONG_EVENT_API_JWT_AUDIENCE:          ~     # Optional.
  BARONG_EVENT_API_JWT_SUBJECT:           ~     # Optional.
  BARONG_EVENT_API_JWT_DEFAULT_LEEWAY:    ~     # Seconds (optional).
  BARONG_EVENT_API_JWT_ISSUED_AT_LEEWAY:  ~     # Seconds (optional).
  BARONG_EVENT_API_JWT_EXPIRATION_LEEWAY: ~     # Seconds (optional).
  BARONG_EVENT_API_JWT_NOT_BEFORE_LEEWAY: ~     # Seconds (optional).

  # Peatio URL for Management API requests.
  PEATIO_ROOT_URL: ~

  # Barong URL for Management API requests.
  BARONG_ROOT_URL: ~

  # Default mails sender settings.
  SENDER_EMAIL:                    ~
  EMAIL_CONFIRMATION_URL_TEMPLATE: 'http://barong:3000/accounts/confirmation?confirmation_token=#{token}' # Mandatory.

  # SMTP configuration
  SMTP_ADDRESS: localhost
  SMTP_PORT: '25'
  SMTP_DOMAIN: localhost.local

  # Configuration variables for API CORS.
  #
  # Set list of allowed origins using the variable below.
  # By default it allows access to API from all origins.
  # See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
  API_CORS_ORIGINS:           '*'
  API_CORS_ALLOW_CREDENTIALS: ~

development:
  <<: *defaults

test:
  <<: *defaults
  PEATIO_ROOT_URL: http://peatio
  BARONG_ROOT_URL: http://barong

production:
  <<: *defaults
