<% if ENV['MANAGEMENT_API_V1_CONFIG'] %>
<%= File.read(ENV['MANAGEMENT_API_V1_CONFIG']) %>
<% else %>
barong:
# Be sure to restart your server when you modify this file.
#
# This file keeps all the security configuration variables for «Management API v1».
#
# Keeps all the private keys to sign Management API requests for each component
# All values must be presented in PEM format and be URL-safe Base64 encoded.
#
# Example:
#
#   keychain:
#     applogic:
#       algorithm: RS256
#       value:     MIGsAgEAAiEAr9meu5Opwz4KNZFgOwjMJ+rKdea2Q9GyP8qPlyKll58CAwEAAQIhAKr1ZO5ztl1MGVzOwsFh4idnTsRmr57I2lCnUoTYFGARAhEA4LorJqcxZsDNyJviyhCyMwIRAMhSOEMFIChBud/NfCohEOUCEQCmzCdpCiGVtbdHlcSP3DKXAhAlICfRM/f7vgKm2bxzSmGJAhEAkYWeilDNyr0s+alQuqeB7Q==
#     applogic:
#       algorithm: HS384
#       value:     eyJhbGciOiJIUzM4NCJ9.e30.yQqTr733SswrBw2w1ot4j4-KvcKtfy5Yd_L-FIejTA67gD5htlocSkHS0BtWvlP_ 
#     applogic:
#       algorithm: RS512
#       value:     MIIBOgIBAAJBANkxjVXJw4qXbyMJ6JuSWCm5ByHkCz9Y5PwWKcouqkQr1E6AWsJszcIidaBZgh+cG9q4brEHnX0Q98hEVugkRLMCAwEAAQJAHGvfktpUPE6UvIEPb0w3PT55MHYnAqMfU92SmmKA5WqZHYwAlxJ1Jl/nQOnhL8pZHjh9RLhKi9qImWs+GBqQAQIhAPQjVVZtVYEWYCYomKkL9FYv/7drLRzQhLGzHCN1X9gjAiEA478TMSLZzOKIlxXPHRYtPNBnqBKVRVOPe+9PnlVf4jECIQC+637KBtiOCaSJUsgHsvySBhlRI/R0izCqEqqXpCuexwIgAs7QRcLQPJ5uYK58JzemxyEqpf/Up04obra8nI8g54ECIDwkAE1QfGpVA9mpkF+YJXRqs1lvhYPypSEtLV9RHXpU
#
#
  keychain: {}

#
# Keeps all the JWT verification options.
# The documentation is available at https://github.com/jwt/ruby-jwt#support-for-reserved-claim-names.
# Check lib/jwt/default_options.rb for the default options.
#
  jwt: {}

#
# Keep all the API security actions.
#
# The API security action consists of action name, list of permitted and mandatory signers
# and requires_barong_totp option (true or false).
# The action name is associated with API action. For example, write_deposits is associated with
# ability to create deposits and accept them. The actions which have «write» in the name are supposed
# to be dangerous so they must require more signatures then read-only actions
#
# Each action must include list of permitted and mandatory signers.
# Peatio validates JWT signatures against permitted keys and doesn't trust
# JWTs which don't include signatures from all mandatory signers.
#
# Example:
#
#  actions:
#    otp_sign:
#      required_signatures:   ['applogic']
#      requires_barong_totp:  true
#
# The available actions include:
#   – write_labels
#   – otp_sign
#
  actions: {}


peatio:
# Be sure to restart your server when you modify this file.
#
# This file keeps all the security configuration variables for «Management API v1».
#
# Keeps all the private keys to sign Management API requests for each component
# All values must be presented in PEM format and be URL-safe Base64 encoded.
#
# Example:
#
#   keychain:
#     applogic:
#       algorithm: RS256
#       value:     MIGpAgEAAiEApwL1kpzPvQqNE5kGBcL9KRAcPPt2NzZceEeLxex9YEUCAwEAAQIgcVCusiU3RfpMsglXbr1X6lU4D6JN1stxzaSlzwZibEECEQDeEWaPBPhnLUm0NAbUt9SNAhEAwIfs3+aDapRUbq8bs8K4mQIQceOEsLbA2tGMKkJAepnpBQIQU17IsQ/lmlJO2XsUONw6CQIQHFla1pD20Acury1rEP8/pg==
#     applogic:
#       algorithm: HS384
#       value:     eyJhbGciOiJIUzM4NCJ9.e30.YjcE_AwP4m80FQcy_7g4ijz6cuZTuoeRMaqyu5M63pcC_31v5NToynczdon4zv5J
#     applogic:
#       algorithm: RS512
#       value:     MIIBOwIBAAJBAMKI2qL3/cY5wVhpNWYzZKsGI+UeoUhleCO7Ja3HXSSK5S1FOxaChUUfMUN+ipgHdpgIyvP95QTE4KIkqJTL3DECAwEAAQJBAJJgaatQ0Pp0AODmoVCagTgS8bV4W8Fe4Ix6SHq/VX2lWSfdgV6dxMxBGCdiodJ1jAaITDnxdMcrXjzOcU6BqnUCIQDs2MihKzEKDxjz7+cKWLieTj35GusSious2At5klcGswIhANJEHsbyuxTGjoUsCkkNeCUCr1k0lS2KXM65R7aCPGOLAiEA4QsuvyzqALPNsuMNdaBNc2XGru4r1Ec+ZjI13QL2m88CIHv7BLbEW0FlzpWBoVLv6T7RdXlBAxFGO3D9WOapplf/AiBA5Fdux0lARHkN0fWMIPrwRAqXYcn/F8/Nip8iZw9kGg==
#
#
  keychain: {}

#
# Keeps all the JWT verification options.
# The documentation is available at https://github.com/jwt/ruby-jwt#support-for-reserved-claim-names.
# Check lib/jwt/default_options.rb for the default options.
#
  jwt: {}

#
# Keep all the API security actions.
#
# The API security action consists of action name, list of permitted and mandatory signers
# and requires_barong_totp option (true or false).
# The action name is associated with API action. For example, write_deposits is associated with
# ability to create deposits and accept them. The actions which have «write» in the name are supposed
# to be dangerous so they must require more signatures then read-only actions
#
# Each action must include list of permitted and mandatory signers.
# Peatio validates JWT signatures against permitted keys and doesn't trust
# JWTs which don't include signatures from all mandatory signers.
#
# Example:
#
#  actions:
#    read_deposits:
#      required_signatures:   ['applogic']
#      requires_barong_totp:  true
#    write_deposits:
#      required_signatures:   ['applogic']
#      requires_barong_totp:  false
#
# The available actions include:
#   – read_deposits
#   – write_deposits
#   – read_withdraws
#   – write_withdraws
#   – tools
#
  actions: {}
<% end %>
